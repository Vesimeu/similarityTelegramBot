import asyncio
from telebot import types
import logging
from services.quest_service import QuestService

logger = logging.getLogger(__name__)

# TODO: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å keyboards –∏ —Ç–µ–∫—Å—Ç—ã, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è

async def handle_mangu_royal(bot, message):
    royal_scroll = (
        "üìú *–í–æ–ª—à–µ–±–Ω—ã–π –£–∫–∞–∑ –î–æ–±—Ä–æ—Å–µ—Ä–¥–µ—á–Ω—ã—Ö –í—Å—Ç—Ä–µ—á*\n"
        "‚ú® **–ó–∞–ø–µ—á–∞—Ç–∞–Ω–æ –ª—É–Ω–Ω—ã–º —Å–≤–µ—Ç–æ–º –∏ –ª–µ–ø–µ—Å—Ç–∫–∞–º–∏ —Ö—Ä—É—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–æ–∑** ‚ú®\n\n"
        "ü¶ã *–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –≥–æ—Å—Ç—å, —Å–≤–µ—Ç –æ—á–µ–π –Ω–∞—à–∏—Ö!*  \n"
        "–í –±–∞—à–Ω–µ @apbaabpa, –≥–¥–µ —Ñ–µ–∏ –ø–ª–µ—Ç—É—Ç –Ω–∏—Ç–∏ —Å—É–¥–µ–±, –∞ –º—É–¥—Ä—ã–µ –≤–æ–ª—à–µ–±–Ω–∏–∫–∏ –±–µ—Ä–µ–∂–Ω–æ —Ö—Ä–∞–Ω—è—Ç –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ,  \n"
        "—Å–µ–≥–æ–¥–Ω—è –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –≤—Ä–∞—Ç–∞ *–¢—É—Ä–Ω–∏—Ä–∞ –õ–∞—Å–∫–æ–≤—ã—Ö –ú–Ω–µ–Ω–∏–π*: \n\n"
        "üåπ –í–∞—à–∏ –º—ã—Å–ª–∏ ‚Äî –∫–∞–∫ –∞–ª–º–∞–∑—ã –≤ –∫–æ—Ä–æ–Ω–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞, –∏ –º—ã –∂–¥—ë–º –∏—Ö —Å —Ç—Ä–µ–ø–µ—Ç–æ–º  \n"
        "üïäÔ∏è –ì–æ–ª—É–±–∫–∏-–ø–æ—Å–ª–∞–Ω–Ω–∏—Ü—ã —Ä–∞–∑–Ω–µ—Å—É—Ç –≤–∞—à–∏ —Å–ª–æ–≤–∞ –ø–æ —Å–≤–µ—Ç—É  \n"
        "üçÉ –≠–ª—å—Ñ—ã-—Ö—Ä–∞–Ω–∏—Ç–µ–ª–∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Å–ª–æ–∂–∞—Ç –∫–∞–∂–¥—É—é –∏–¥–µ—é –≤ —à–∫–∞—Ç—É–ª–∫—É –º—É–¥—Ä–æ—Å—Ç–∏  \n\n"
        "üíé *–û, –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫, –∫–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –¥–∏–≤–Ω–æ–º—É –¥–µ–π—Å—Ç–≤—É?*  \n"
        "1. –ü—Ä–æ—Å–ª–µ–¥—É–π—Ç–µ –≤ —Ö—Ä—É—Å—Ç–∞–ª—å–Ω—ã–µ —á–µ—Ä—Ç–æ–≥–∏: @apbaabpa  \n"
        "2. –®–µ–ø–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å ¬´–õ—É–Ω–Ω—ã–π —Å–≤–µ—Ç¬ª —Å—Ç—Ä–∞–∂–∞–º-–≥–Ω–æ–º–∞–º  \n"
        "3. –û–∫—É–Ω–∏—Ç–µ—Å—å –≤ –º–æ—Ä–µ —Ç—ë–ø–ª—ã—Ö –±–µ—Å–µ–¥, –≥–¥–µ –∫–∞–∂–¥–æ–º—É —Ä–∞–¥—ã!"
    )
    markup = types.InlineKeyboardMarkup()
    castle_button = types.InlineKeyboardButton(
        text="üîÆ –ö–æ—Å–Ω—É—Ç—å—Å—è –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –∑–µ—Ä–∫–∞–ª–∞ üîÆ",
        url="https://t.me/apbaabpa"
    )
    markup.add(castle_button)
    await bot.send_chat_action(message.chat.id, 'typing')
    await asyncio.sleep(1.2)
    herald_msg = await bot.send_message(
        message.chat.id,
        "üßö *–§–µ—è-–Ω–µ–≤–∏–¥–∏–º–∫–∞ —Ä–∞—Å—Å—ã–ø–∞–µ—Ç –∑–≤—ë–∑–¥–Ω—É—é –ø—ã–ª—å...*",
        parse_mode="Markdown"
    )
    await asyncio.sleep(0.8)
    await bot.edit_message_text(
        royal_scroll,
        chat_id=message.chat.id,
        message_id=herald_msg.message_id,
        parse_mode="Markdown",
        reply_markup=markup,
        disable_web_page_preview=True
    )
    seal_msg = await bot.send_message(
        message.chat.id,
        "üå∫ *–ü–µ—á–∞—Ç—å –ö–æ—Ä–æ–ª–µ–≤—ã –§–µ–π —Ç–∞–µ—Ç –≤ –≤–æ–∑–¥—É—Ö–µ, –æ—Å—Ç–∞–≤–ª—è—è –∞—Ä–æ–º–∞—Ç –∂–∞—Å–º–∏–Ω–∞...*",
        parse_mode="Markdown"
    )
    await asyncio.sleep(1.5)
    await bot.delete_message(message.chat.id, seal_msg.message_id)

async def handle_tournament(bot, message, quest_service: QuestService):
    await quest_service.start_quest(message)

async def handle_quest(bot, message, quest_service: QuestService):
    await quest_service.start_quest(message)

# –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –≤ main.py –∏–ª–∏ —Ä–æ—É—Ç  –µ—Ä–µ:
# bot.register_message_handler(lambda m: m.text == "üå∫@apbaabpa", handle_tournament)
# bot.register_message_handler(commands=['quest'], handle_quest)
# bot.register_message_handler(commands=['mangu'], handle_mangu_royal) 