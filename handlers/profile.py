import asyncio
from telebot import types
from services.profile_service import ProfileService
import logging

logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π keyboards, –∫–æ–≥–¥–∞ –æ–Ω–∏ –±—É–¥—É—Ç –≤—ã–Ω–µ—Å–µ–Ω—ã
from keyboards.keyboards import gender_keyboard, preferred_gender_keyboard, main_menu_keyboard
from texts.texts import WELCOME_TEXT, WELCOME_SCROLL
# TODO: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
from datetime import datetime
from utils.state_service import StateService

# –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞—é—Ç state_service –≤–º–µ—Å—Ç–æ user_data

async def cmd_update_profile(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    chat_id = message.chat.id
    try:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è.")
        scroll_msg = await bot.send_message(
            chat_id,
            "üìú *–°–≤–∏—Ç–æ–∫ –∞–Ω–∫–µ—Ç—ã —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è...*",
            parse_mode="Markdown"
        )
        await asyncio.sleep(1)
        await bot.edit_message_text(
            "‚úçÔ∏è *–ü–µ—Ä–æ –æ–∫—É–Ω–∞–µ—Ç—Å—è –≤ —á–µ—Ä–Ω–∏–ª–∞...*",
            chat_id=chat_id,
            message_id=scroll_msg.message_id,
            parse_mode="Markdown"
        )
        await asyncio.sleep(1)
        await bot.delete_message(chat_id, scroll_msg.message_id)
        await bot.send_message(
            user_id,
            "üñãÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
            reply_markup=types.ForceReply()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
        state_service.set_user_state(user_id, {"step": "waiting_for_name", "registration": True})
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_update_profile: {e}")
        await bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

async def handle_name_input(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    name = message.text.strip()
    try:
        # –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –∏–º–µ–Ω–∏
        writing_steps = [
            f"üïäÔ∏è *–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π(–∞—è) {name}, —Ñ–µ–∏ —É–∂–µ —à–µ–ø—á—É—Ç –≤–∞—à–µ –∏–º—è –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–µ–º –≤–µ—Ç–µ—Ä–∫–µ...*",
            f"üìú *–ú—É–¥—Ä—ã–µ —ç–ª—å—Ñ-–ø–∏—Å—Ü—ã –≤—ã–≤–æ–¥—è—Ç ¬´{name}¬ª —Å–µ—Ä–µ–±—Ä—è–Ω—ã–º–∏ —á–µ—Ä–Ω–∏–ª–∞–º–∏...*",
            f"‚ú® *–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —Å–≤–∏—Ç–æ–∫ —Ç—Ä–µ–ø–µ—â–µ—Ç –æ—Ç —Å—á–∞—Å—Ç—å—è, –ø—Ä–∏–Ω–∏–º–∞—è –≤–∞—à–µ –∏–º—è...*"
        ]
        writing_msg = await bot.send_message(
            user_id, 
            writing_steps[0],
            parse_mode="Markdown"
        )
        for step in writing_steps[1:]:
            await asyncio.sleep(1.2)
            await bot.edit_message_text(
                step,
                chat_id=user_id,
                message_id=writing_msg.message_id,
                parse_mode="Markdown"
            )
        if await profile_service.update_profile(user_id, {"name": name}):
            await bot.edit_message_text(
                f"üíé *¬´{name}¬ª - –∏–º—è –¥–æ—Å—Ç–æ–π–Ω–æ–µ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –∫—Ä–æ–≤–∏!*\n\nü¶¢ *–¢–µ–ø–µ—Ä—å –ø–µ—Ä–æ —Å—É–¥—å–±—ã –∑–∞–º–µ—Ä–ª–æ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏...*",
                chat_id=user_id,
                message_id=writing_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(2)
            # gender_keyboard ‚Äî –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ keyboards
            await bot.send_message(
                user_id,
                "üåπ *–û, –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–π—à–∏–π(–∞—è) –∏–∑ –≤–µ—á–Ω–æ–±–ª–∞–∂–µ–Ω—Å—Ç–≤—É—é—â–∏—Ö!*\n–í–∞—à –ø–æ–ª –ú—É–∂—Å–∫–æ–π –∏–ª–∏ –ñ–µ–Ω—Å–∫–∏–π, –∫–∞–∫–æ–≤ –≤–∞—à –≥–µ–Ω–¥–µ—Ä?\n\n*–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ , –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π (–∞—è):*",
                parse_mode="Markdown",
                # reply_markup=gender_keyboard
            )
            # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
            state = state_service.get_user_state(user_id)
            state["step"] = "waiting_for_gender"
            state_service.set_user_state(user_id, state)
        else:
            await bot.edit_message_text(
                f"üíî *–û, —Å–≤–µ—Ç–ª–µ–π—à–∏–π(–∞—è) {name}!\n–ß–µ—Ä–Ω–∏–ª—å–Ω—ã–µ —Ñ–µ–∏ —É—Ä–æ–Ω–∏–ª–∏ —Ö—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —Ñ–ª–∞–∫–æ–Ω...\n\n‚ú® *–ù–µ —Ç—Ä–µ–≤–æ–∂—å—Ç–µ—Å—å!* –ü—Ä–æ—Å—Ç–æ –≤–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –µ—â—ë —Ä–∞–∑:",
                chat_id=user_id,
                message_id=writing_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(2)
            await bot.send_message(
                user_id,
                "üñãÔ∏è *–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π(–∞—è):*",
                parse_mode="Markdown",
                reply_markup=types.ForceReply()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∏—Ç—É–∞–ª–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {e}")
        await bot.send_message(
            user_id,
            "üå™Ô∏è *–û, –±—Ä–∏–ª–ª–∏–∞–Ω—Ç —Å—Ä–µ–¥–∏ –ª—é–¥–µ–π!*\n–í–æ–ª—à–µ–±–Ω—ã–π –≤–∏—Ö—Ä—å –ø–æ–º–µ—à–∞–ª –Ω–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à–µ –∏–º—è...\n\nüïäÔ∏è *–ü–æ–∑–≤–æ–ª—å—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤–∞—Å –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –µ—â—ë —Ä–∞–∑:*",
            parse_mode="Markdown",
            reply_markup=types.ForceReply()
        ) 

async def handle_gender_input(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    chat_id = message.chat.id
    gender = message.text
    try:
        if gender not in ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"]:
            wrong_msg = await bot.send_message(
                chat_id,
                "‚öîÔ∏è *–†—ã—Ü–∞—Ä—å-—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ö–º—É—Ä–∏—Ç—Å—è:*\nüö´ –¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç –≤ –¥—Ä–µ–≤–Ω–∏—Ö —Å–≤–∏—Ç–∫–∞—Ö!",
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.edit_message_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",
                chat_id=chat_id,
                message_id=wrong_msg.message_id
            )
            return
        check_msg = await bot.send_message(
            chat_id,
            f"üîÆ *–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª: {gender}...*",
            parse_mode="Markdown"
        )
        await asyncio.sleep(1.5)
        if await profile_service.update_profile(user_id, {"gender": gender}):
            await bot.edit_message_text(
                f"‚úÖ *{gender} –ø–æ–ª –∑–∞–ø–µ—á–∞—Ç–∞–Ω –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –ø–µ—á–∞—Ç—å—é!*\nüåô –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–∞–≤–µ–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∞—Ä—Ö–∏–≤–∞—Ö –ì–∏–ª—å–¥–∏–∏",
                chat_id=chat_id,
                message_id=check_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.delete_message(chat_id, check_msg.message_id)
            age_msg = await bot.send_message(
                chat_id,
                "üßô *–ú—É–¥—Ä–µ—Ü-—Ö—Ä–æ–Ω–æ–ª–æ–≥ –≤–æ–ø—Ä–æ—à–∞–µ—Ç:*\n‚åõ **–°–∫–æ–ª—å–∫–æ –∑–∏–º –≤—ã –≤–∏–¥–µ–ª–∏, –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å?**\n\n_–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ (–æ—Ç 18 –¥–æ 99)_\n‚ú® –í—ã —É–≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç",
                parse_mode="Markdown"
            )
            # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
            state = state_service.get_user_state(user_id)
            state["step"] = "waiting_for_age"
            state_service.set_user_state(user_id, state)
            state["age_msg_id"] = age_msg.message_id
        else:
            await bot.edit_message_text(
                "üí• *–ß–µ—Ä–Ω–∏–ª–∞ –≤–Ω–µ–∑–∞–ø–Ω–æ –≤–æ—Å–ø–ª–∞–º–µ–Ω–∏–ª–∏—Å—å!*\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª",
                chat_id=chat_id,
                message_id=check_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.send_message(
                chat_id,
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª —Å–Ω–æ–≤–∞:",
                # reply_markup=gender_keyboard
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_gender_input: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞.")

async def handle_age_input(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    chat_id = message.chat.id
    text = message.text
    try:
        if not text.isdigit():
            wrong_msg = await bot.send_message(
                chat_id,
                "üìú *–ú—É–¥—Ä–µ—Ü-–∫–∞–ª–ª–∏–≥—Ä–∞—Ñ —Ä–∞–∑–≥–ª—è–¥—ã–≤–∞–µ—Ç –≤–∞—à–∏ —Å–∏–º–≤–æ–ª—ã:*\n‚úñÔ∏è –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ü–∏—Ñ—Ä—ã –∏–∑ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∏—Ö –∞—Ä—Ö–∏–≤–æ–≤!",
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.edit_message_text(
                "‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º, –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫.",
                chat_id=chat_id,
                message_id=wrong_msg.message_id
            )
            return
        age = int(text)
        if not (18 <= age <= 99):
            scroll_msg = await bot.send_message(
                chat_id,
                f"üßô *–•—Ä–∞–Ω–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –¥—Ä–µ–≤–Ω–∏–π —Å–≤–∏—Ç–æ–∫:*\n‚è≥ –í–∞—à–∏ {age} –∑–∏–º –≤—ã—Ö–æ–¥—è—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –¥–æ–∑–≤–æ–ª–µ–Ω–Ω–æ–≥–æ...",
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.edit_message_text(
                "‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 18 –¥–æ 99 –ª–µ—Ç, —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å—Ç–∞–≤—É –ì–∏–ª—å–¥–∏–∏.",
                chat_id=chat_id,
                message_id=scroll_msg.message_id
            )
            return
        record_msg = await bot.send_message(
            chat_id,
            f"üìñ *–ü–∏—Å–∞—Ä—å –∫–æ—Ä–æ–ª—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –∫–Ω–∏–≥—É —Å—É–¥–µ–±:*\n‚úçÔ∏è –í–æ–∑—Ä–∞—Å—Ç {age} –∑–∏–º –∑–∞–Ω–æ—Å–∏—Ç—Å—è –≤ –∞–Ω–Ω–∞–ª—ã...",
            parse_mode="Markdown"
        )
        await asyncio.sleep(1.5)
        if await profile_service.update_profile(user_id, {"age": age}):
            await bot.edit_message_text(
                f"‚úÖ *{age} –∑–∏–º –∑–∞–ø–µ—á–∞—Ç–ª–µ–Ω–æ –∑–æ–ª–æ—Ç—ã–º–∏ —á–µ—Ä–Ω–∏–ª–∞–º–∏!*\nüîí –¢–µ–ø–µ—Ä—å –æ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ",
                chat_id=chat_id,
                message_id=record_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.delete_message(chat_id, record_msg.message_id)
            pref_msg = await bot.send_message(
                chat_id,
                "üéØ *–õ—É—á–Ω–∏–∫-–∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ –≤–æ–ø—Ä–æ—à–∞–µ—Ç ....:*\nüèπ **–í –∫–∞–∫–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∏—Å–∫–∞—Ç—å –í–∞–º –¥–æ—Å—Ç–æ–π–Ω—ã—Ö —Å–ø—É—Ç–Ω–∏–∫–æ–≤?**\n\n_–û –≤—ã —Å–∞–º–æ –±–ª–∞–≥–æ—Ä–æ–¥—Å—Ç–≤–æ! –£–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–µ 'min-max' (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25-35)_\n‚ú® –í–∞—à–µ —Å–∏—è—Ç–µ–ª—å—Å—Ç–≤–æ –≤—ã —É–≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, —á—å–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –≤–∞—à–∏–º –≤–æ–∑—Ä–∞—Å—Ç–æ–º",
                parse_mode="Markdown"
            )
            # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
            state = state_service.get_user_state(user_id)
            state["step"] = "waiting_for_preferred_age"
            state_service.set_user_state(user_id, state)
            state["pref_msg_id"] = pref_msg.message_id
        else:
            await bot.edit_message_text(
                "üí• *–ß–µ—Ä–Ω–∏–ª—å–Ω–æ–µ –ø—è—Ç–Ω–æ –∏—Å–ø–æ—Ä—Ç–∏–ª–æ –ø–µ—Ä–≥–∞–º–µ–Ω—Ç!*\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –≤ –∞—Ä—Ö–∏–≤–∞—Ö",
                chat_id=chat_id,
                message_id=record_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.send_message(
                chat_id,
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –≤–æ–∑—Ä–∞—Å—Ç —Å–Ω–æ–≤–∞:"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_age_input: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –≤–æ–∑—Ä–∞—Å—Ç–∞.")

async def handle_preferred_age_input(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    chat_id = message.chat.id
    text = message.text
    try:
        if "-" not in text:
            scroll = await bot.send_message(
                chat_id,
                "üìú *–ú—É–¥—Ä–µ—Ü-—Ö—Ä–æ–Ω–æ–ª–æ–≥ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –¥—Ä–µ–≤–Ω–∏–π —Å–≤–∏—Ç–æ–∫:*\n‚úñÔ∏è *–ó–∞–ø–∏—Å—å –Ω–∞—Ä—É—à–∞–µ—Ç —É—Å—Ç–∞–≤ –ì–∏–ª—å–¥–∏–∏!*\n\nüîÆ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç ¬´min-max¬ª (–ø—Ä–∏–º–µ—Ä: 25-35)",
                parse_mode="Markdown"
            )
            await asyncio.sleep(2)
            await bot.edit_message_text(
                "üìõ –í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´min-max¬ª:",
                chat_id=chat_id,
                message_id=scroll.message_id
            )
            return
        min_age, max_age = map(int, text.split("-"))
        if min_age >= max_age or min_age < 18 or max_age > 100:
            await bot.send_message(
                chat_id,
                "‚öîÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 18-100!"
            )
            return
        record_msg = await bot.send_message(
            chat_id,
            f"üìñ *–ü–∏—Å–∞—Ä—å –∫–æ—Ä–æ–ª—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –∫–Ω–∏–≥—É —Å—É–¥–µ–±:*\n‚úçÔ∏è –î–∏–∞–ø–∞–∑–æ–Ω {min_age}-{max_age} –∑–∏–º –∑–∞–Ω–æ—Å–∏—Ç—Å—è –≤ –∞–Ω–Ω–∞–ª—ã...",
            parse_mode="Markdown"
        )
        await asyncio.sleep(1.5)
        if await profile_service.update_profile(user_id, {"preferred_age_range": [min_age, max_age]}):
            await bot.edit_message_text(
                f"‚úÖ *–î–∏–∞–ø–∞–∑–æ–Ω {min_age}-{max_age} –∑–∏–º —Å–∫—Ä–µ–ø–ª–µ–Ω –ø–µ—á–∞—Ç—å—é!*\nüîí –¢–µ–ø–µ—Ä—å –æ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ",
                chat_id=chat_id,
                message_id=record_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1)
            await bot.delete_message(chat_id, record_msg.message_id)
            await bot.send_message(
                chat_id,
                "üîÆ *–û—Ä–∞–∫—É–ª –ì–∏–ª—å–¥–∏–∏ –≤–æ–ø—Ä–æ—à–∞–µ—Ç:*\n‚ú® **–ö–æ–≥–æ –∏—â–µ—Ç –≤–∞—à–µ —Å–µ—Ä–¥—Ü–µ?**\n\n_–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–ª –∏–∑ —Å–≤–∏—Ç–∫–∞_",
                parse_mode="Markdown",
                # reply_markup=preferred_gender_keyboard
            )
            # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
            state = state_service.get_user_state(user_id)
            state["step"] = "waiting_for_preferred_gender"
            state_service.set_user_state(user_id, state)
        else:
            await bot.edit_message_text(
                "üí• *–ß–µ—Ä–Ω–∏–ª—å–Ω–æ–µ –ø—è—Ç–Ω–æ –∏—Å–ø–æ—Ä—Ç–∏–ª–æ –ø–µ—Ä–≥–∞–º–µ–Ω—Ç!*\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –≤ –∞—Ä—Ö–∏–≤–∞—Ö",
                chat_id=chat_id,
                message_id=record_msg.message_id,
                parse_mode="Markdown"
            )
            await asyncio.sleep(1.5)
            await bot.send_message(
                chat_id,
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Å–Ω–æ–≤–∞:",
                reply_markup=types.ForceReply()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_preferred_age_input: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.")

async def handle_preferred_gender_input(bot, message, profile_service: ProfileService, state_service: StateService):
    user_id = message.from_user.id
    chat_id = message.chat.id
    gender = message.text
    try:
        if gender not in ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π", "–õ—é–±–æ–π"]:
            await bot.send_message(
                chat_id,
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
                # reply_markup=preferred_gender_keyboard
            )
            return
        if await profile_service.update_profile(user_id, {"preferred_gender": gender, "preferences.gender": gender, "last_modified": datetime.now(), "is_completed": True}):
            await bot.send_message(
                chat_id,
                f"‚úÖ –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {gender}",
                # reply_markup=main_menu_keyboard
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ state_service
            state_service.clear_user_state(user_id)
        else:
            await bot.send_message(
                chat_id,
                "‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å (–≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—Ç –∂–µ –ø–æ–ª)",
                # reply_markup=main_menu_keyboard
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_preferred_gender_input: {e}")
        await bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–≥–æ –ø–æ–ª–∞.")

async def show_profile(bot, user_id, profile_service: ProfileService, is_owner=False):
    try:
        profile = await profile_service.get_profile(user_id)
        if profile:
            visibility = profile.get("visibility", {
                "name": True,
                "age": True,
                "gender": True,
                "city": True,
                "email": True,
                "photo_url": True,
                "social_links": True,
                "interests": True,
                "phone": True
            })
            profile_message = "üë§ –í–∞—à –∏–∑—É–º–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:\n" if is_owner else "üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
            # TODO: –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è, —É—á–µ—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å
            if is_owner or visibility.get("name", True):
                profile_message += f"üîÅ–ò–º—è: {profile.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            if is_owner or visibility.get("age", True):
                profile_message += f"üîÅ–í–æ–∑—Ä–∞—Å—Ç: {profile.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("gender", True):
                profile_message += f"üîÅ–ì–µ–Ω–¥–µ—Ä: {profile.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("city", True):
                profile_message += f"–ì–æ—Ä–æ–¥: {profile.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("preferred_age_range", True):
                profile_message += f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç: {profile.get('preferred_age_range', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("preferences", True):
                profile_message += f"–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –≥–µ–Ω–¥–µ—Ä: {profile.get('preferences', {}).get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("email", True):
                profile_message += f"Email: {profile.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("photo_url", True):
                profile_message += f"URL: {profile.get('photo_url', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            if is_owner or visibility.get("social_links", True):
                profile_message += f"–°–æ—Ü—Å–µ—Ç–∏: {profile.get('social_links', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}\n"
            if is_owner or visibility.get("interests", True):
                profile_message += f"–ò–Ω—Ç–µ—Ä–µ—Å—ã: {profile.get('interests', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}\n"
            if is_owner or visibility.get("phone", True):
                profile_message += f"–¢–µ–ª–µ—Ñ–æ–Ω: {profile.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            await bot.send_message(user_id, profile_message)
        else:
            await bot.send_message(user_id, "‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: {e}", exc_info=True)
        await bot.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è.")
# TODO: –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å show_profile –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –∏ –Ω–æ–≤—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏

async def reset_profile(bot, user_id, profile_service: ProfileService):
    try:
        await profile_service.update_profile(user_id, {
            "name": None,
            "age": None,
            "gender": None,
            "city": None,
            "photo_url": None,
            "preferences": {
                "gender": "–õ—é–±–æ–π",
                "preferred_city": "",
                "preferred_keyword": ""
            },
            "visibility": {
                "name": True,
                "age": True,
                "gender": True,
                "city": True,
                "email": False,
                "photo_url": False,
                "social_links": False,
                "interests": False,
                "phone": False
            }
        })
        await bot.send_message(user_id, "‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã!")
        await show_profile(bot, user_id, profile_service, is_owner=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        await bot.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è.")

async def handle_visibility_settings(bot, user_id, profile_service: ProfileService):
    try:
        profile = await profile_service.get_profile(user_id)
        if not profile:
            await bot.send_message(user_id, "‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        visibility = profile.get("visibility", {
            "name": True,
            "age": True,
            "gender": True,
            "city": True,
            "email": True,
            "photo_url": True,
            "social_links": True,
            "interests": True,
            "phone": True
        })
        visibility_status = "üëÄ –¢–µ–∫—É—â–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–æ–ª–µ–π:\n"
        for field, is_visible in visibility.items():
            status = "üü¢ –í–∏–¥–∏–º–æ" if is_visible else "üî¥ –°–∫—Ä—ã—Ç–æ"
            visibility_status += f"{field.capitalize()}: {status}\n"
        # visibility_keyboard ‚Äî –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ keyboards
        await bot.send_message(user_id, visibility_status) #, reply_markup=visibility_keyboard)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–¥–∏–º–æ—Å—Ç–∏: {e}", exc_info=True)
        await bot.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–∏–¥–∏–º–æ—Å—Ç–∏.") 